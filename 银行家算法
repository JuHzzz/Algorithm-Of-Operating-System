
import java.util.Scanner;

public class Banker {
	
	private static int Available[] = {3,3,2};
	private static int Max[][] = {{7,5,3},{3,2,2},{9,0,2},{2,2,2},{4,3,3}};
	private static int Allocation[][] = {{0,1,0},{2,0,0},{3,0,2},{2,1,1},{0,0,2}};
	private static int Need[][] = {{7,4,3},{1,2,2},{6,0,0},{0,1,1},{4,3,1}};
	private static int Request[][] = new int[5][3];

	int thread;
	private  void checkData(){
		System.out.println("请输入要申请系统资源的进程：");
		Scanner sc = new Scanner(System.in);
		int thread = sc.nextInt();
		if(thread<0||thread>4){
			System.out.println("输入有误！");
			checkData();
		}else{
			System.out.println("您选择了进程P"+thread);
			this.thread = thread;
			System.out.println("输入您的三种资源的数目：");
			for (int i = 0; i < 3; i++) {
				Request[thread][i] = sc.nextInt();
			}
			for (int j = 0; j < Need[thread].length; j++) {
				if(Request[thread][j] <= Need[thread][j]){
					if(Request[thread][j] <= Available[j]){
						changeData(thread);
						if(checkSafe(thread)){
							checkData();
						}else{
							recoverData(thread);
							checkData();
						}
					}else{
						System.out.println("出错！尚无足够资源");
						checkData();
					}
					
				}else{
					System.out.println("出错！进程所需要的资源数已经超过它所需的最大值！");
					checkData();
				}
			}
		}
	
	}
	
	private static void changeData(int thread){
		for (int i = 0; i < Allocation[thread].length; i++) {
			Available[i] -= Request[thread][i];
			Allocation[thread][i] += Request[thread][i];
			Need[thread][i] -= Request[thread][i];
		}
	}
	
	private static void recoverData(int thread){
		for (int i = 0; i < Allocation[thread].length; i++) {
			Available[i] += Request[thread][i];
			Allocation[thread][i] -= Request[thread][i];
			Need[thread][i] += Request[thread][i];
		}
	}
	
	private static boolean checkSafe(int thread){
		int num;
		int k = 0;
		int i;
		int Work[] = new int[3];
		int safe[] = new int[5];
		boolean Finish[] = new boolean[5];
		boolean flag[] = new boolean[3];
		for ( i = 0; i < 5; i++) {
			Finish[i] = false;
		}
		num = thread;
		for ( i = 0; i < 3; i++) {
			Work[i] = Available[i] ; 
		}
		     
		while (num < 5) {
			for (int j = 0; j < 3; j++) {
				if(Finish[num] == true){
					num++;
					break;
				}else if(Need[num][j] > Work[j]){
					num++;
					break;
				}else if(j == 2){
					for (int p = 0; p < 3; p++) {
						Work[p] += Allocation[num][p];
					}
					Finish[num] = true;
					safe[k] = num;
					k++;
					num = 0;
				}
			}
			
			
		}
		
        
		for (int q = 0; q < 5; q++) {
			if(Finish[q] == false){
				System.out.println("系统不安全");
				return false;
			}
		}
		System.out.print("系统安全，安全序列为：");
		for (int p = 0; p < 5; p++) {
			System.out.print("P"+safe[p]+"-->");
		}
		System.out.println();
		return true;
	}
	public static void main(String[] args) {
		Banker bk = new Banker();
		bk.checkData();
		
	}
}
